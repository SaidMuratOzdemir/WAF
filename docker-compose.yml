version: "3.9"

services:
  postgres:
    image: postgres:16
    environment:
      - POSTGRES_DB= waf
      - POSTGRES_USER= waf
      - POSTGRES_PASSWORD= waf
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
        - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U waf -d waf" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: [ waf-core-net ]
    restart: unless-stopped

  redis:
    image: redis:7
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: [ waf-core-net ]
    restart: unless-stopped

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql+asyncpg://waf:waf@postgres:5432/waf
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - PORT=8001
    depends_on: [ postgres, redis ]
    networks: [ waf-core-net ]
    restart: unless-stopped

  waf:
    build:
      context: .
      dockerfile: ./waf/Dockerfile
    # Sadece WAF host'a açılır:
    ports: [ "80:80" ]
    environment:
      - DATABASE_URL=postgresql+asyncpg://waf:waf@postgres/waf
      - REDIS_URL=redis://redis:6379
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY}
      - DEBUG=true
      - POLL_INTERVAL=5
    depends_on: [ postgres, redis, api ]
    # WAF tüm app ağlarında da olacak:
    networks: [ waf-core-net, dvwa-net, juiceshop-net, hr-system-net ]
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  # Core (DB/Redis/API <-> WAF)
  waf-core-net:
    external: true
    ipam:
      config:
        - subnet: 10.99.0.0/24

  # Uygulama ağları — WAF bunu OLUŞTURUR (external değil)
  dvwa-net:
    external: true
    ipam:
      config:
        - subnet: 10.99.1.0/24

  juiceshop-net:
    external: true
    ipam:
      config:
        - subnet: 10.99.2.0/24

  hr-system-net:
    external: true
    ipam:
      config:
        - subnet: 10.99.3.0/24
